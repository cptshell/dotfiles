unbind-key -a
unbind C-b
set -g prefix C-Space


#-------------settings------------

set -g escape-time 1
set -g word-separators ' &!#$({[>/ '
set -g default-terminal "screen-256color"

set -g status-position top
set -g xterm-keys on

set -g mode-keys vi
set -g status-keys emacs

set -g focus-events off


set -g history-limit 8000

setw -g window-style 'bg=colour0, fg=colour7, none'
setw -g window-active-style 'bg=colour8, fg=colour15, none'

set -g bell-action any

#-------------statusbar------------

set -g status-bg colour0
set -g status-fg white
# set -g window-status-current-fg black
# set -g window-status-current-bg white
# set -g window-status-current-attr none

set -g mode-style 'bg=colour16,fg=yellow,none'

set -g status-right " %d.%m.%Y #[fg=yellow,bright]%H:%M  "
set -gw status-left " #[fg=yellow][#S]#[fg=none]  "


#-------------keys------------

bind-key \; command-prompt
bind-key C-o rotate-window
bind-key C-z suspend-client
#bind-key Space next-layout
bind-key "#" list-buffers

bind-key v split-window "-h"
bind-key s split-window "-v"

bind-key & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key ( switch-client -p
bind-key ) switch-client -n
bind-key "\$" command-prompt -I "#S" "rename-session '%%'"
bind-key "," command-prompt -I "#W" "rename-window '%%'"
bind-key - delete-buffer
bind-key . command-prompt "move-window -t '%%'"
bind-key 0 select-window -t :0
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9
bind-key : command-prompt
bind-key ? list-keys
bind-key D choose-client
bind-key L switch-client -l
bind-key [ copy-mode
bind-key ] paste-buffer
bind-key c new-window
bind-key d detach-client
bind-key i display-message

bind-key -r n next-window
bind-key -r Tab next-window
bind-key -r C-Tab next-window
bind-key -r p previous-window
bind-key -n "^=" set status 




bind-key ! break-pane
bind-key o select-pane -t :.+
bind-key q display-panes

bind-key { swap-pane -U
bind-key } swap-pane -D

bind-key -r C-K resize-pane -U 8
bind-key -r C-J resize-pane -D 8
bind-key -r k resize-pane -U 16
bind-key -r j resize-pane -D 16

bind-key -r C-H resize-pane -L 16
bind-key -r C-L resize-pane -R 16

bind-key m select-pane -m

bind-key t clock-mode
bind-key w choose-window
bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key "~" show-messages
bind-key PPage copy-mode -u
bind-key -r Up select-pane -U
bind-key -r Down select-pane -D
bind-key -r Left select-pane -L
bind-key -r Right select-pane -R


#----vcustom keys------

#next pane
bind-key -n  C-g select-pane -t :.+

#reload configs
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

#fullscreen pane
bind-key -r f resize-pane -Z

#split vertically man page
bind '|' command-prompt "split-window 'exec man %%'"

#split horizontal if one pane, vertically otherwise
#bind-key -n S-F1 if-shell 'test "`tmux list-panes | wc -l`" = 1' 'split-window -h -p 32 \; last-pane \; refresh \; last-pane' 'split-window -v'


#enter copy mode, change cursor's color, move cursor to the bottom of the screen and search up

#bind-key -n "^_" if "[[ `tmux display-message -p #{pane_current_command}` =~ (ba|z)sh ]]" "send-keys ^_" "run ccc"

set -g key-table root #'copy-mode-jumps-forward' 'copy-mode-vi' 
#set -g key-table 'copy-mode-jumps-backward' 'copy-mode-vi' 


bind-key -Troot "^_" switch-client -Tcopy-mode-vi
bind-key "^_" paste-buffer

# bind-key -Tcopy-mode-vi f switch-client -Tcopy-mode-jumps
# bind-key -Tcopy-mode-jumps k send -X jump-forward 'k'

#------vi visual-------

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'Y' send -X copy-pipe-and-cancel xsel \; paste-buffer -s '; ' 
bind-key -Tcopy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'V' send -X select-line
bind-key -Tcopy-mode-vi 'q' send -X cancel
bind-key -Tcopy-mode-vi Escape send -X clear-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel xsel

#bind-key -T copy-mode-vi '?' command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
#bind-key -T copy-mode-vi '/' command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""

bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel xsel


#-----pane look ------

set -g message-command-style fg=yellow,bold,underscore,blink
set -g pane-border-style fg=white,bg=default
set -g pane-active-border-style fg=white,bg=default


#bind-key -n S-F1 if-shell 'test "`tmux list-panes | wc -l`" = 1' 'split-window -h -p 42 ; refresh-client' 'split-window -v'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key l send-keys C-l
#bind-key C-l send-keys C-l


set -gw main-pane-width 158


#run-shell ~/.tmux/tmux-yank/yank.tmux
run-shell ~/.tmux/tmux-urlview/urlview.tmux
run-shell ~/.tmux/vi-key-table.tmux

bind-key -n S-F1 split-window "-h" \; refresh-client

set-hook -g after-split-window ''

#unbind C-s
