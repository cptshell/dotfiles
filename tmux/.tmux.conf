# $Id: t-williams.conf,v 1.1 2009-11-02 18:59:28 nicm Exp $
#
# ~/.tmux.conf - tmux terminal multiplexer config
# Thayer Williams (http://cinderwick.ca)
# "Feel free to do whatever you like with it."

# I typically start tmux from ~/.xinitrc with the following:
#
#   urxvt -e bash -c "tmux attach -d -t mysession" &
#
# and recall it any time thereafter with xbindkeys (Mod4+s):
#
#   "urxvt -e bash -c 'tmux attach -d -t mysession'"
#     m:0x50 + c:39


# set prefix key to ctrl+g
unbind C-b
set -g prefix C-Space
bind-key C-g send-prefix


setw -g mode-keys vi # vim-style movement
#setw -g xterm-keys on                   



set-option -g status-position top
 
bind \; command-prompt
set-option -g status-position top

bind -r C-k select-window -t -
bind -r C-j select-window -t -


# toggle statusbar
bind-key b set-option status

# ctrl+left/right cycles thru windows
bind-key -n C-j next
bind-key -n C-k prev
bind-key -n C-t new-window



bind-key -n S-F1 if-shell 'test "`tmux list-panes | wc -l`" = 1' 'split-window -h' 'split-window -v'


bind-key -n C-1 if-shell "tmux list-windows | grep \^1" 'select-window -t 1' 'new-window -t 1' 
bind-key -n C-2 if-shell "tmux list-windows | grep \^2" 'select-window -t 2' 'new-window -t 2' 
bind-key -n C-3 if-shell "tmux list-windows | grep \^3" 'select-window -t 3' 'new-window -t 3' 
bind-key -n C-4 if-shell "tmux list-windows | grep \^4" 'select-window -t 4' 'new-window -t 4' 
bind-key -n C-5 if-shell "tmux list-windows | grep \^5" 'select-window -t 5' 'new-window -t 5' 
bind-key -n C-6 if-shell "tmux list-windows | grep \^6" 'select-window -t 6' 'new-window -t 6' 
bind-key -n C-7 if-shell "tmux list-windows | grep \^7" 'select-window -t 7' 'new-window -t 7' 
bind-key -n C-8 if-shell "tmux list-windows | grep \^8" 'select-window -t 8' 'new-window -t 8' 
bind-key -n C-9 if-shell "tmux list-windows | grep \^9" 'select-window -t 9' 'new-window -t 9' 
 

 

bind-key -n S-F1 if-shell 'test "`tmux list-panes | wc -l`" = 1' 'split-window -h' 'split-window -v'

# open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# scrollback buffer n lines
set -g history-limit 100000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"

set -s escape-time 0


# statusbar --------------------------------------------------------------

set -g display-time 2000

# default statusbar colors
set -g status-fg white
set -g status-bg black
set -g status-attr bold

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr bright

# active window title colors
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bold

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# center align the window list
set -g status-justify left

# show some useful stats but only when tmux is started 
# outside of Xorg, otherwise dwm statusbar shows these already
set -g status-right ""
set -g status-left ""
if '[ -z "$DISPLAY" ]' 'set -g status-left "[#[fg=green] #H #[default]]"'
if '[ -z "$DISPLAY" ]' 'set -g status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=cyan,bright]%a %Y-%m-%d %H:%M #[default]]"'
if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'

set -g default-terminal "screen-256color"


setw -g window-status-format  "#I"
setw -g window-status-current-format  "#I"



# in normal tmux mode
bind Escape copy-mode # `tmux prefix + Escape` starts copy mode.
bind p paste-buffer # `prefix + p` pastes the latest buffer

# in copy modeâ€¦
bind -t vi-copy v begin-selection # `v` begins a selection. (movement keys to select the desired bits)
bind -t vi-copy y copy-selection # `y` copies the current selection to one of tmux's "paste buffers"
bind -t vi-copy V rectangle-toggle # `V` changes between line- and columnwise selection

bind -t vi-copy Y copy-end-of-line # ^1
bind + delete-buffer

bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'


bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."
